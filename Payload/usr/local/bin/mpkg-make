#!/bin/bash
ROOTFS="/"
LIBRARY=$ROOTFS"usr/local/mpkglib"
if [[ -z $3 ]]; then
	$LIBRARY/binary/mpkgmake-manual
	exit
fi
if [[ ! -z $1 ]]; then
	if [[ $1 -ne "-a" ]]; then
		echo "Missing required parameter: -a [OS Architecture]"
		exit
	fi
	if [[ -z $2 ]]; then
		echo "Missing required parameter: OS architecture (Darwin / Linux / Duo)"
		exit
	fi
	if [[ -z $3 ]]; then
		echo "Missing package parameter!"
		exit
	fi
	if [[ -e $3/Payload ]]; then
		cd $3/Payload
		zip -rq Payload.zip . -x ".*" -x "__MACOSX"
		mv Payload.zip ../Payload.zip
		cd ..
		if [[ -e $3/userPayload ]]; then
			echo "userPayload detected..."
			cd $3/userPayload
			zip -rq userPayload.zip . -x ".*" -x "__MACOSX"
			mv userPayload.zip ../userPayload.zip
			cd ..
		fi
		MD5LOG=$(md5 Payload.zip)
		if [[ ! -e $3/Info/pkgid ]]; then
			rm $3/Payload.zip
			echo "Package ID Missing!"
			exit
		elif [[ -z $(<$3/Info/pkgid) ]]; then
			rm $3/Payload.zip
			echo "Package ID empty!"
			exit
		else
			echo "Package ID: "$(<$3/Info/pkgid)
		fi
		if [[ ! -e $3/Info/pkgname ]]; then
			rm $3/Payload.zip
			echo "Package Name Missing!"
			exit
		elif [[ -z $(<$3/Info/pkgname) ]]; then
			rm $3/Payload.zip
			echo "Package Name empty!"
			exit
		else
			echo "Package Name: "$(<$3/Info/pkgname)
		fi
		if [[ ! -e $3/Info/version ]]; then
			rm $3/Payload.zip
			echo "Package version Missing!"
			exit
		elif [[ -z $(<$3/Info/version) ]]; then
			rm $3/Payload.zip
			echo "Package version empty!"
			exit
		else
			echo "Package Version: "$(<$3/Info/version)
		fi
		echo $MD5LOG
		echo "Please copy the MD5 Hash signature and paste here."
		read hash
		if [[ -z $hash ]]; then
			rm $3/Payload.zip
			echo "Hash cannot be empty!"
			exit
		else
			echo $hash>$3/Info/pkgsign
			echo "File locally signed."
		fi
		echo "Packing Information Cluster..."
		cd $3/Info
		zip -rq Info.zip . -x ".*" -x "__MACOSX"
		mv Info.zip ../Info.zip
		cd ..
		mkdir cache
		mv Info.zip ./cache/Info.zip
		mv Payload.zip ./cache/Payload.zip
		if [[ -e userPayload.zip ]]; then
			mv userPayload.zip ./cache/userPayload.zip
		fi
		cd cache
		NAME=$(<$3/Info/pkgid)
		NAME="$NAME"_$(<$3/Info/version)
		if [[ $2 == "Darwin" ]]; then
			NAME="$NAME"_darwin64-signed
		elif [[ $2 == "Linux" ]]; then
			NAME="$NAME"_linux-signed
		elif [[ $2 == "Duo" ]]; then
			NAME="$NAME"_duo-signed
		else
			NAME="$NAME"_noarch-signed
		fi
		zip -rq $NAME.zip . -x ".*" -x "__MACOSX"
		mv "$NAME.zip" ../"$NAME.zip"
		cd ..
		mv "$NAME.zip" "$NAME.mpack"
		rm -r cache
		echo "Done."
	else
		echo "Payload directory not found."
		exit
	fi
else
	echo "Missing parameter: architecture"
	exit
fi
